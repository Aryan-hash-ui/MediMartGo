# Why Design Patterns Matter in Node.js
# Node.js, known for its non-blocking event-driven architecture, presents unique challenges and opportunities in software design. Applying design patterns tailored to Node.js can lead to more efficient and optimized applications. Letâ€™s explore some key design patterns that are particularly valuable in the Node.js ecosystem:

# Singleton Pattern
# The Singleton pattern ensures that a class has only one instance and provides a global point of access to it. In Node.js, where modules can be cached and shared across the application, using the Singleton pattern can help manage resources effectively. For instance, a database connection pool can be implemented as a singleton to prevent resource wastage.
# To install env
# npm i dotenv

# Goto index.js & import it also

# Dotenv is a zero-dependency module that loads environment variables from a .env file into process.env. Storing configuration in the environment separate from code is based on The Twelve-Factor App methodology.


MAIL_SENDER=aryangupta1904@gmail.com
MAIL_PASSWORD=Raftaar.jsx@8860


#Now to secure your APIs install jwtwebtoken
# If you read the JWT docs, the function can run in two modes: Synchronously (sync) and asynchronously (async). The function can automatically decide on which method to use depending on the number of parameters and type of parameters you provide the function, and the parameters you can supply are (in order):

# The data/payload
# Secret key/token
# Options/configs (optional, can use callback here if you use default options)
# Callback function (optional, will run in async mode if you provide this)
JWT_SALT_KEY_ADMIN=ducatisinnoidaandwearedoingmernfullstackfromhere
JWT_SALT_KEY_BUYER=ducatisinpreetampuraandwearedoingnodejsfullstackfromhere
RPKEYID = rzp_test_kJFCr5jnzPYy9s
RPSECRETKEY = cFR0T4bhyI16Xb06fFytJmAu